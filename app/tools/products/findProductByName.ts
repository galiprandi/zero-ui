import { tool } from "ai";
import { z } from "zod";
import { logToolExecute, logToolResult } from "../../lib/logger";
import { searchByName } from "../../services/products/searchByName";

export const findProductByNameTool = tool({
  description: `üîé Buscar por nombre ‚Äî Encuentra productos por nombre (parcial o completo). Retorna { products }.

    Cu√°ndo usar:
    - El usuario pide por nombre o palabra clave: "mayonesa", "arroz gallo", "oreo".
    - Preguntas como: "stock de <nombre>", "¬øhay <nombre>?", "precio de <nombre>", "buscar <nombre>", "necesito <nombre>".
    - Cuando NO hay EAN proporcionado expl√≠citamente.

    Cu√°ndo NO usar:
    - Si el usuario provee/escanea un EAN (usa findProductByEan).
    - Si el usuario ya seleccion√≥ un producto espec√≠fico y quiere stock/reposici√≥n (usa consultProduct con su EAN).

    Presentaci√≥n (Markdown simple):
    - Si hay 1 resultado: puedes encadenar consultProduct autom√°ticamente con su EAN.
    - Si hay varios: lista hasta 5 opciones como "- [Nombre] ‚Äî EAN <ean> ‚Äî [Categor√≠a]".
    - Agrega quick replies al final con <quick-replies> para continuar (consultar, cambiar precio, imprimir).
    `,
  inputSchema: z.object({
    query: z
      .string()
      .describe(
        "Consulta de b√∫squeda (nombre parcial o completo), ej.: 'arroz'",
      ),
  }),
  execute: async ({ query }) => {
    logToolExecute({
      toolName: "findProductByName",
      input: { query },
      ts: new Date().toISOString(),
    });

    const products = searchByName(query);
    const quickRepliesText = products.length
      ? `<quick-replies>\nüß† Consultor de productos, üí≤ Cambiar precio, üñ®Ô∏è Imprimir ticket\n</quick-replies>`
      : "";
    const result = { products, quickRepliesText } as const;

    logToolResult({
      toolName: "findProductByName",
      output: result,
      ts: new Date().toISOString(),
    });

    return result;
  },
});
